% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingFunctions.R
\name{minFragCart2Polar}
\alias{minFragCart2Polar}
\title{Calculate the nearest feature in polar coordinates given cartesian
coordinates}
\usage{
minFragCart2Polar(x, y, degreeOfFeatures)
}
\arguments{
\item{x}{cartesian x coordinate}

\item{y}{cartesian y coordinate}

\item{degreeOfFeatures}{list of positions of features}
}
\value{
\code{minFragCart2Polar} returns the index of the feature that has the
 smallest distance to the given coordinates. As \code{minFragCart2Polar} is 
 used in \code{shinyCircos} for the track 1 only polar r coordinates between
 0.8 and 1 will be used to find the feature with smallest distance.
}
\description{
Calculates the nearest feature in polar coordinates given 
 cartesian coordinates
}
\details{
\code{minFragCart2Polar} is employed to find the feature with 
 the smallest distance from given cartesian coordinates.
}
\examples{
## load binnedMSP
data("binnedMSP", package = "MetCirc")
## use only a selection 
binnedMSP <- binnedMSP[c(1:20, 29:48, 113:132, 240:259),]
simM <- createSimilarityMatrix(binnedMSP)
groupname <- rownames(simM)
plotCircos(groupname, NULL, initialize = TRUE, featureNames = FALSE, 
     groupName = FALSE, groupSector = FALSE, links = FALSE, highlight = FALSE)
x <- 1
y <- 0
degreeFeatures <- lapply(groupname, 
 function(x) mean(circlize:::get.sector.data(x)[c("start.degree", "end.degree")]))
minFragCart2Polar(x, y, degreeOfFeatures = degreeFeatures)
}
\author{
Thomas Naake, \email{thomasnaake@googlemail.com}
}

